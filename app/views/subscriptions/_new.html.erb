<div id="registration-area-<%= competition.id %>" class="text-center padded-mini-bottom">
  <% if !competition.finished? && competition.accepted_users.include?(current_user) %>
    <!-- case: applied, accepted -->
    <i class="fa fa-check text-success"></i> <%= t('subscriptions.accepted') %>

  <% elsif competition.pending_users.include?(current_user) %>
    <!-- case: applied, pending -->
    <i class="fa fa-refresh text-warning"></i> <%= t('subscriptions.pending') %>&nbsp;&nbsp;
    <%= link_to t('competitions.cancel'), competition_subscription_path(competition, Subscription.find_by(user: current_user, competition: competition)), method: :delete, data: { confirm: t('competitions.form.delete.message') } %>

  <% elsif competition.refused_users.include?(current_user) %>
    <!-- case: applied, refused -->
    <i class="fa fa-times text-danger"></i> <%= t('subscriptions.refused') %>

  <% else %>
    <% if policy(competition).apply? %>
      <!-- case: not applied or not signed in -->
      <%= link_to t('competitions.apply'), new_competition_subscription_path(competition), class: "navbar-wagon-button btn padded-mini-bottom", remote: user_signed_in? %>

      <!-- MODAL -->
      <% if user_signed_in? %>
        <div class="modal" id="modal-<%= competition.id %>" tabindex="-1" role="dialog" aria-labelledby="new_registration">
          <div class="modal-dialog" role="document">
            <div id="modal-content-<%= competition.id %>" class="modal-content">
              <% last_sub = current_user.subscriptions.order(created_at: :desc).first %>
              <%= render 'subscriptions/form', competition: competition, subscription: Subscription.new(competition: competition,
                                 status: competition.default_registration_status,
                                 phone_number: last_sub.try(:phone_number) || nil,
                                 whatsapp: last_sub.try(:whatsapp) || false,
                                 telegram: last_sub.try(:telegram) || false,
                                 signal: last_sub.try(:signal) || false) %>
            </div>
          </div>
        </div>
      <% end %>
      <!-- END MODAL -->
    <% end %>
  <% end %>
</div>
